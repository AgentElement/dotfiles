###############################################################################
# POWERLINE
###############################################################################

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

###############################################################################
# OPTIONS, ALIASES, BINDKEYS, EXPORTS
###############################################################################

HISTFILE=~/.histfile
HISTSIZE=5000
SAVEHIST=5000

setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt interactivecomments       # Allow typing comments at an interactive prompt
setopt correct                   # Suggest spelling suggestions for mistyped commands

# Aliases
# alias ls='ls --color=auto'
alias grep='grep --colour=auto'
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'
alias cp="cp -i"
alias df="df -h"
alias du="dust"
alias ls="lsd"
alias ssh="TERM=xterm-256color ssh"
alias cat="bat"

alias vim=nvim


alias icat="kitty +kitten icat" # image cat

alias find="fd"

alias notemk="touch `date -I`.txt"
alias enote='nvim `ls -1 | grep -P \"\d{4}-[01]\d-[0-3]\d\.txt\" | tail -1`'

alias nixdev="nix develop -c zsh"
alias hm-switch="home-manager switch --flake ~/dotfiles/.#agentelement"
alias nix-rebuild="nixos-rebuild switch --flake ~/dotfiles/.#delta"
alias nix-poetry="nix flake init --template github:nix-community/poetry2nix"
alias nix-rust="nix flake init --template templates#rust"
alias exifdump="identify -format '%[EXIF:*]'"
alias airplane-mode="nmcli radio all off && bluetoothctl power off"

autoload -z edit-command-line
zle -N edit-command-line
bindkey vicmd edit-command-line # Use vicmd to edit the current line in vim

bindkey -v                      # Vi bindings
bindkey "^[[3~" delete-char     # Make 'delete' actually delete
bindkey \^U backward-kill-line  # Ctrl-U works as in bash
bindkey "^[[1;5C" forward-word  # Ctrl-right moves right a word
bindkey "^[[1;5D" backward-word # Ctrl-left moves left a word

export EDITOR='nvim'
export VISUAL='nvim'

export DEBUGINFOD_URLS='https://debuginfod.elfutils.org/'
export DEBUGINFOD_PROGRESS=1

export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket

export PATH=~/.local/bin:$PATH

# nmtui uses NEWT_COLORS to set colors; this sets a sensible color scheme.
export NEWT_COLORS='
    root=black,black;
    window=black,black;
    border=white,black;
    listbox=white,black;
    label=blue,black;
    checkbox=red,black;
    title=green,black;
    button=black,red;
    actsellistbox=black,red;
    actlistbox=white,gray;
    compactbutton=white,gray;
    actcheckbox=black,blue;
    entry=lightgray,black;
    textbox=blue,black
'

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--color=dark
--color=fg:-1,bg:-1,hl:#bb70d2,fg+:#ffffff,bg+:#37383d,hl+:#79428a
--color=info:#8fb573,prompt:#57a5e5,pointer:#de5d68,marker:#dbb671,spinner:#57a5e5,header:#57a5e5
'


# Tell gpg which tty to use
export GPG_TTY=$(tty)
# COMPLETION
###############################################################################

# Set up fzf keybinds and fuzzy completion
source <(fzf --zsh)

autoload -Uz compinit
compinit
# Completion for kitty
kitty + complete setup zsh | source /dev/stdin

# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with lsd when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd'

# Use hjkl to navigate completion menu
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

###############################################################################
# PLUGINS
###############################################################################

# Zoxide
eval "$(zoxide init zsh --cmd j)"

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit ice depth=1;
zinit light romkatv/powerlevel10k

zinit light "wfxr/forgit"
zinit light "jeffreytse/zsh-vi-mode"
# fzf-tab must be the last plugin to bind ^I, but must be loaded before plugins
# which will wrap widgets
zinit light "Aloxaf/fzf-tab"
zinit light "MikeDacre/tmux-zsh-vim-titles"
zinit light "zsh-users/zsh-autosuggestions"
zinit light "hlissner/zsh-autopair"
zinit light "zdharma-continuum/fast-syntax-highlighting"
